openapi: 3.0.0
info:
    title: Customer Management API
    version: 1.0.0
paths:
/customers:
    post:
        summary: Create a new customer
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CustomerRequest'
        responses:
            '201':
                description: Customer created successfully
            '400':
                description: Invalid request (e.g., email not provided or formatted incorrectly)
    /customers/{id}:
        get:
            summary: Retrieve a customer by ID
            parameters:
                - in: path
                    name: id
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: Customer retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerResponse'
                '404':
                    description: Customer not found
    /customers?name={name}:
        get:
            summary: Retrieve a customer by name
            parameters:
                - in: query
                    name: name
                    required: false
                    schema:
                        type: string
            responses:
                '200':
                    description: Customer retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerResponse'
    /customers?email={email}:
        get:
            summary: Retrieve a customer by email
            parameters:
                - in: query
                    name: email
                    required: false
                    schema:
                        type: string
            responses:
                '200':
                    description: Customer retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerResponse'
    /customers/{id}:
        put:
            summary: Update customer details by ID
            parameters:
                - in: path
                    name: id
                    required: true
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CustomerRequest'
            responses:
                '200':
                    description: Customer updated successfully
        delete:
            summary: Delete a customer by ID
            parameters:
                - in: path
                    name: id
                    required: true
                    schema:
                        type: string
            responses:
                '204':
                    description: Customer deleted successfully
components:
    schemas:
        CustomerRequest:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                annualSpend:
                    type: number
                    format: double
                lastPurchaseDate:
                    type: string
                    format: date-time
            required:
                - name
                - email
        CustomerResponse:
            allOf:
                - $ref: '#/components/schemas/CustomerRequest'
            properties:
                id:
                    type: string
                tier:
                    type: string
                    enum:
                        - Silver
                        - Gold
                        - Platinum